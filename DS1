ServerInterface.java – Remote Interface
import java.rmi.*; 
public interface ServerInterface extends Remote { 
String concat(String a, String b) throws RemoteException; 
}
Servant.java – Implements Remote Interface
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
public class Servant extends UnicastRemoteObject implements ServerInterface {
protected Servant() throws RemoteException {
super(); // Required to export the object
}
@Override
public String concat(String a, String b) throws RemoteException {
return a + b;
}
}
Server.java - Starts and Binds the Server
import java.rmi.*;
public class Server {
    public static void main(String[] args) {
        try {
            Servant s = new Servant();
            Naming.rebind("Server", s);
        } catch (Exception e) {
            System.out.println(e);
        }
    }}
Client.java – Connects to the Server and Calls Remote Method
import java.rmi.*;
import java.util.Scanner;
public class Client {
    public static void main(String args[]) {
        try {
            Scanner s = new Scanner(System.in);
            System.out.println("Enter the Server address: ");
            String server = s.nextLine();

            ServerInterface si = (ServerInterface) Naming.lookup("rmi://" + server + "/Server");

            System.out.println("Enter first string: ");
            String first = s.nextLine();
            System.out.println("Enter second string: ");
            String second = s.nextLine();

            System.out.println("Concatenated String: " + si.concat(first, second));
            s.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }
}

1.	javac *.java
2.	rmic Servant
3.	start rmiregistry (new terminal)
4.	java Server
5.	java Client

